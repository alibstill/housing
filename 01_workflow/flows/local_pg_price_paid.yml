id: local_pg_price_paid
namespace: housing_local

inputs:
  - id: year
    type: SELECT
    displayName: "year"
    defaults: "2024"
    values:
      - "1995"
      - "1996"
      - "1997"
      - "1998"
      - "1999"
      - "2000"
      - "2001"
      - "2002"
      - "2003"
      - "2004"
      - "2005"
      - "2006"
      - "2007"
      - "2008"
      - "2009"
      - "2010"
      - "2011"
      - "2012"
      - "2013"
      - "2014"
      - "2015"
      - "2016"
      - "2017"
      - "2018"
      - "2019"
      - "2020"
      - "2021"
      - "2022"
      - "2023"
      - "2024"

variables:
  file_name: "pp-{{inputs.year}}"
  data: "{{outputs.download_price_paid.outputFiles['pp-' ~ inputs.year ~ '.csv']}}"

tasks:
  - id: set_label
    type: io.kestra.plugin.core.execution.Labels
    labels:
      year: "{{inputs.year}}"

  - id: download_price_paid
    type: io.kestra.plugin.scripts.python.Commands
    containerImage: ghcr.io/kestra-io/pydata:latest # need for pyarrow
    namespaceFiles:
      enabled: true
    beforeCommands:
      - pip install -r requirements.txt
    commands:
      - python get_price_paid.py --file_name={{render(vars.file_name)}}.csv --base_url={{secret('PRICE_PAID_BASE_URL')}} --is_kestra
    outputFiles:
      - "*.csv"

  - id: create_price_paid_pg_table
    type: io.kestra.plugin.jdbc.postgresql.Query
    sql: |
      CREATE TABLE IF NOT EXISTS public.price_paid (
            transaction_id UUID NOT NULL PRIMARY KEY,
            price INTEGER,
            date_of_transfer DATE,
            postcode TEXT,
            property_type CHAR(1),
            is_new_build CHAR(1),
            tenure_duration CHAR(1),
            primary_address_name TEXT,
            secondary_address_name TEXT ,
            street TEXT,
            locality TEXT,
            town_city TEXT,
            district TEXT,
            county TEXT,
            price_paid_transaction_type CHAR(1),
            record_status CHAR(1)
      );

  - id: create_price_paid_pg_staging_table
    type: io.kestra.plugin.jdbc.postgresql.Query
    sql: |
      CREATE TABLE IF NOT EXISTS public.price_paid_staging (
            transaction_id UUID NOT NULL PRIMARY KEY,
            price INTEGER,
            date_of_transfer DATE,
            postcode TEXT,
            property_type CHAR(1),
            is_new_build CHAR(1),
            tenure_duration CHAR(1),
            primary_address_name TEXT,
            secondary_address_name TEXT ,
            street TEXT,
            locality TEXT,
            town_city TEXT,
            district TEXT,
            county TEXT,
            price_paid_transaction_type CHAR(1),
            record_status CHAR(1)
      );

  - id: truncate_staging_table
    type: io.kestra.plugin.jdbc.postgresql.Query
    sql: |
      TRUNCATE TABLE public.price_paid_staging;

  - id: copy_in_to_staging_table
    type: io.kestra.plugin.jdbc.postgresql.CopyIn
    format: CSV
    from: "{{render(vars.data)}}"
    table: "public.price_paid_staging"
    header: false
    columns:
      [
        transaction_id,
        price,
        date_of_transfer,
        postcode,
        property_type,
        is_new_build,
        tenure_duration,
        primary_address_name,
        secondary_address_name,
        street,
        locality,
        town_city,
        district,
        county,
        price_paid_transaction_type,
        record_status,
      ]

  - id: merge_data
    type: io.kestra.plugin.jdbc.postgresql.Query
    sql: |
      MERGE INTO public.price_paid AS T
      USING public.price_paid_staging AS S
      ON T.transaction_id = S.transaction_id AND T.record_status = S.record_status
      WHEN NOT MATCHED THEN
        INSERT (
          transaction_id,price,date_of_transfer,postcode,property_type,is_new_build,tenure_duration,primary_address_name,secondary_address_name,street,locality,town_city,district,county,price_paid_transaction_type,record_status
        )
        VALUES (
         S.transaction_id,S.price,S.date_of_transfer,S.postcode,S.property_type,S.is_new_build,S.tenure_duration,S.primary_address_name,S.secondary_address_name,S.street,S.locality,S.town_city,S.district,S.county,S.price_paid_transaction_type,S.record_status
        );

pluginDefaults:
  - type: io.kestra.plugin.jdbc.postgresql
    values:
      url: jdbc:postgresql://host.docker.internal:5435/housing
      username: my_user
      password: my_password
