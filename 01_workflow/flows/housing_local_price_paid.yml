id: price_paid
namespace: housing_local

inputs:
  - id: year
    type: SELECT
    displayName: "year"
    defaults: "2024"
    values:
      - "1995"
      - "1996"
      - "1997"
      - "1998"
      - "1999"
      - "2000"
      - "2001"
      - "2002"
      - "2003"
      - "2004"
      - "2005"
      - "2006"
      - "2007"
      - "2008"
      - "2009"
      - "2010"
      - "2011"
      - "2012"
      - "2013"
      - "2014"
      - "2015"
      - "2016"
      - "2017"
      - "2018"
      - "2019"
      - "2020"
      - "2021"
      - "2022"
      - "2023"
      - "2024"

variables:
  file_name: "pp-{{inputs.year}}"

tasks:
  - id: set_label
    type: io.kestra.plugin.core.execution.Labels
    labels:
      year: "{{inputs.year}}"

  - id: download_price_paid
    type: io.kestra.plugin.scripts.python.Commands
    containerImage: ghcr.io/kestra-io/pydata:latest # need for pyarrow
    namespaceFiles:
      enabled: true
    beforeCommands:
      - pip install -r requirements.txt
    commands:
      - python get_price_paid.py --file_name={{render(vars.file_name)}}.csv --base_url={{secret('PRICE_PAID_BASE_URL')}} --is_kestra
    outputFiles:
      - "*.csv"

  - id: to_parquet
    type: io.kestra.plugin.scripts.python.Commands
    containerImage: ghcr.io/kestra-io/pydata:latest
    namespaceFiles:
      enabled: true
    beforeCommands:
      - pip install -r requirements.txt
    taskRunner:
      type: io.kestra.plugin.scripts.runner.docker.Docker
    inputFiles: "{{ outputs.download_price_paid.outputFiles }}"
    commands:
      - python csv_to_pq.py --src_file_name={{render(vars.file_name) }} --is_kestra
    outputFiles:
      - "*.parquet"
  # - id: to_parquet
  #   type: io.kestra.plugin.scripts.python.Script
  #   warningOnStdErr: false
  #   containerImage: ghcr.io/kestra-io/pydata:latest
  #   taskRunner:
  #     type: io.kestra.plugin.scripts.runner.docker.Docker
  #   env:
  #     FILE_NAME: "{{ render(vars.file_name) }}"
  #   inputFiles: "{{ outputs.download_price_paid.outputFiles }}"
  #   script: |
  #     import os
  #     import pandas as pd

  #     file_name = os.environ["FILE_NAME"]
  #     file = f"{file_name}.csv"
  #     columns=[
  #       "transaction_uid",
  #       "price",
  #       "date_of_transfer",
  #       "postcode",
  #       "property_type",
  #       "is_new_build",
  #       "tenure_duration",
  #       "paon",
  #       "saon",
  #       "street",
  #       "locality",
  #       "town_city",
  #       "district",
  #       "county",
  #       "transaction_type",
  #       "record_status",
  #     ]
  #     df = pd.read_csv(file, names=columns)
  #     df.to_parquet(f"{file_name}.parquet")
  #   outputFiles:
  #     - "*.parquet"
